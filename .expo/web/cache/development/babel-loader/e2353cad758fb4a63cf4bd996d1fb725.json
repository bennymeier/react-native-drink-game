{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _config = require(\"../config\");\n\nvar _Image = _interopRequireDefault(require(\"../image/Image\"));\n\nvar _Icon = _interopRequireDefault(require(\"../icons/Icon\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\Benny\\\\Desktop\\\\ReactNativeDrinkGame\\\\node_modules\\\\react-native-elements\\\\src\\\\avatar\\\\Accessory.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Accessory(_ref) {\n  var size = _ref.size,\n      style = _ref.style,\n      underlayColor = _ref.underlayColor,\n      onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      source = _ref.source,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"size\", \"style\", \"underlayColor\", \"onPress\", \"onLongPress\", \"source\"]);\n  return _react.default.createElement(_reactNative.TouchableHighlight, {\n    style: _reactNative.StyleSheet.flatten([styles.accessory, {\n      width: size,\n      height: size,\n      borderRadius: size / 2\n    }, style]),\n    underlayColor: underlayColor,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, source ? _react.default.createElement(_Image.default, (0, _extends2.default)({\n    style: {\n      width: size,\n      height: size,\n      borderRadius: size / 2\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })) : _react.default.createElement(_Icon.default, (0, _extends2.default)({\n    size: size * 0.8\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }))));\n}\n\nAccessory.defaultProps = {\n  size: 10,\n  name: 'mode-edit',\n  type: 'material',\n  color: '#fff',\n  underlayColor: '#000'\n};\nAccessory.propTypes = {\n  size: _propTypes.default.number,\n  name: _propTypes.default.string,\n  type: _propTypes.default.string,\n  color: _propTypes.default.string,\n  underlayColor: _propTypes.default.string,\n  style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  onPress: _propTypes.default.func\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  accessory: _objectSpread({\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#aaa'\n  }, _reactNative.Platform.select({\n    android: {\n      elevation: 1\n    },\n    default: {\n      shadowColor: '#000',\n      shadowOffset: {\n        width: 1,\n        height: 1\n      },\n      shadowRadius: 2,\n      shadowOpacity: 0.5\n    }\n  }))\n});\n\nvar _default = (0, _config.withTheme)(Accessory, 'AvatarAccessory');\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Benny/Desktop/ReactNativeDrinkGame/node_modules/react-native-elements/src/avatar/Accessory.js"],"names":["Accessory","size","style","underlayColor","onPress","onLongPress","source","props","StyleSheet","flatten","styles","accessory","width","height","borderRadius","defaultProps","name","type","color","propTypes","PropTypes","number","string","oneOfType","object","array","func","create","position","bottom","right","alignItems","justifyContent","backgroundColor","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowRadius","shadowOpacity"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TouchableHighlight, View, Platform, StyleSheet } from 'react-native';\nimport { withTheme } from '../config';\nimport Image from '../image/Image';\nimport Icon from '../icons/Icon';\n\nfunction Accessory({\n  size,\n  style,\n  underlayColor,\n  onPress,\n  onLongPress,\n  source,\n  ...props\n}) {\n  return (\n    <TouchableHighlight\n      style={StyleSheet.flatten([\n        styles.accessory,\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n        },\n        style,\n      ])}\n      underlayColor={underlayColor}\n      onPress={onPress}\n      onLongPress={onLongPress}\n    >\n      <View>\n        {source ? (\n          <Image\n            style={{\n              width: size,\n              height: size,\n              borderRadius: size / 2,\n            }}\n            {...props}\n          />\n        ) : (\n          <Icon size={size * 0.8} {...props} />\n        )}\n      </View>\n    </TouchableHighlight>\n  );\n}\n\nAccessory.defaultProps = {\n  size: 10,\n  name: 'mode-edit',\n  type: 'material',\n  color: '#fff',\n  underlayColor: '#000',\n};\n\nAccessory.propTypes = {\n  size: PropTypes.number,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  color: PropTypes.string,\n  underlayColor: PropTypes.string,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onPress: PropTypes.func,\n};\n\nconst styles = StyleSheet.create({\n  accessory: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#aaa',\n    ...Platform.select({\n      android: {\n        elevation: 1,\n      },\n      default: {\n        shadowColor: '#000',\n        shadowOffset: { width: 1, height: 1 },\n        shadowRadius: 2,\n        shadowOpacity: 0.5,\n      },\n    }),\n  },\n});\n\nexport default withTheme(Accessory, 'AvatarAccessory');\n"]},"metadata":{},"sourceType":"script"}