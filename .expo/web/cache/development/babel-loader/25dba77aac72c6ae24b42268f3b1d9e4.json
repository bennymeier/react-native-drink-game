{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"color\", {\n  enumerable: true,\n  get: function get() {\n    return _color.default;\n  }\n});\nObject.defineProperty(exports, \"renderNode\", {\n  enumerable: true,\n  get: function get() {\n    return _renderNode.default;\n  }\n});\nObject.defineProperty(exports, \"getIconType\", {\n  enumerable: true,\n  get: function get() {\n    return _getIconType.default;\n  }\n});\nObject.defineProperty(exports, \"normalizeText\", {\n  enumerable: true,\n  get: function get() {\n    return _normalizeText.default;\n  }\n});\nObject.defineProperty(exports, \"nodeType\", {\n  enumerable: true,\n  get: function get() {\n    return _nodeType.default;\n  }\n});\nObject.defineProperty(exports, \"ImageSourceType\", {\n  enumerable: true,\n  get: function get() {\n    return _types.ImageSourceType;\n  }\n});\nexports.conditionalStyle = exports.isIOS = exports.ScreenHeight = exports.ScreenWidth = exports.patchWebProps = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _renderNode = _interopRequireDefault(require(\"./renderNode\"));\n\nvar _getIconType = _interopRequireDefault(require(\"./getIconType\"));\n\nvar _normalizeText = _interopRequireDefault(require(\"./normalizeText\"));\n\nvar _nodeType = _interopRequireDefault(require(\"./nodeType\"));\n\nvar _types = require(\"./types\");\n\nvar Screen = _reactNative.Dimensions.get('window');\n\nvar ScreenWidth = Screen.width;\nexports.ScreenWidth = ScreenWidth;\nvar ScreenHeight = Screen.height;\nexports.ScreenHeight = ScreenHeight;\nvar isIOS = _reactNative.Platform.OS === 'ios';\nexports.isIOS = isIOS;\n\nvar conditionalStyle = function conditionalStyle(condition, style) {\n  return condition ? style : {};\n};\n\nexports.conditionalStyle = conditionalStyle;\n\nvar patchWebProps = function patchWebProps(_ref) {\n  var updateTheme = _ref.updateTheme,\n      replaceTheme = _ref.replaceTheme,\n      onClear = _ref.onClear,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"updateTheme\", \"replaceTheme\", \"onClear\"]);\n  return rest;\n};\n\nexports.patchWebProps = patchWebProps;","map":{"version":3,"sources":["C:/Users/Benny/Desktop/ReactNativeDrinkGame/node_modules/react-native-elements/src/helpers/index.js"],"names":["Screen","Dimensions","get","ScreenWidth","width","ScreenHeight","height","isIOS","Platform","OS","conditionalStyle","condition","style","patchWebProps","updateTheme","replaceTheme","onClear","rest"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAGC,wBAAWC,GAAX,CAAe,QAAf,CAAf;;AACA,IAAMC,WAAW,GAAGH,MAAM,CAACI,KAA3B;;AACA,IAAMC,YAAY,GAAGL,MAAM,CAACM,MAA5B;;AACA,IAAMC,KAAK,GAAGC,sBAASC,EAAT,KAAgB,KAA9B;;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,SAAD,EAAYC,KAAZ;AAAA,SAAuBD,SAAS,GAAGC,KAAH,GAAW,EAA3C;AAAA,CAAzB;;;;AAEO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAKvB;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADDC,IACC;AACJ,SAAOA,IAAP;AACD,CAPM","sourcesContent":["import { Platform, Dimensions } from 'react-native';\nimport color from 'color';\nimport renderNode from './renderNode';\nimport getIconType from './getIconType';\nimport normalizeText from './normalizeText';\nimport nodeType from './nodeType';\nimport { ImageSourceType } from './types';\n\nconst Screen = Dimensions.get('window');\nconst ScreenWidth = Screen.width;\nconst ScreenHeight = Screen.height;\nconst isIOS = Platform.OS === 'ios';\n\nconst conditionalStyle = (condition, style) => (condition ? style : {});\n\nexport const patchWebProps = ({\n  updateTheme,\n  replaceTheme,\n  onClear,\n  ...rest\n}) => {\n  return rest;\n};\n\nexport {\n  renderNode,\n  getIconType,\n  normalizeText,\n  nodeType,\n  ScreenWidth,\n  ScreenHeight,\n  isIOS,\n  conditionalStyle,\n  color,\n  ImageSourceType,\n};\n"]},"metadata":{},"sourceType":"script"}