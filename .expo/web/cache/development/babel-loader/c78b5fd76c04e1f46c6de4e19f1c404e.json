{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Tile = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _config = require(\"../config\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _Image = _interopRequireDefault(require(\"../image/Image\"));\n\nvar _Text = _interopRequireDefault(require(\"../text/Text\"));\n\nvar _Icon = _interopRequireDefault(require(\"../icons/Icon\"));\n\nvar _FeaturedTile = _interopRequireDefault(require(\"./FeaturedTile\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Benny\\\\Desktop\\\\ReactNativeDrinkGame\\\\node_modules\\\\react-native-elements\\\\src\\\\tile\\\\Tile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Tile = function Tile(props) {\n  var featured = props.featured,\n      imageSrc = props.imageSrc,\n      icon = props.icon,\n      title = props.title,\n      children = props.children,\n      caption = props.caption,\n      titleStyle = props.titleStyle,\n      onPress = props.onPress,\n      activeOpacity = props.activeOpacity,\n      overlayContainerStyle = props.overlayContainerStyle,\n      captionStyle = props.captionStyle,\n      iconContainerStyle = props.iconContainerStyle,\n      imageContainerStyle = props.imageContainerStyle,\n      containerStyle = props.containerStyle,\n      contentContainerStyle = props.contentContainerStyle,\n      titleNumberOfLines = props.titleNumberOfLines,\n      ImageComponent = props.ImageComponent,\n      imageProps = props.imageProps,\n      attributes = (0, _objectWithoutProperties2.default)(props, [\"featured\", \"imageSrc\", \"icon\", \"title\", \"children\", \"caption\", \"titleStyle\", \"onPress\", \"activeOpacity\", \"overlayContainerStyle\", \"captionStyle\", \"iconContainerStyle\", \"imageContainerStyle\", \"containerStyle\", \"contentContainerStyle\", \"titleNumberOfLines\", \"ImageComponent\", \"imageProps\"]);\n  var width = props.width,\n      _props$height = props.height,\n      height = _props$height === void 0 ? width * 0.8 : _props$height;\n\n  if (featured) {\n    var featuredProps = {\n      title: title,\n      icon: icon,\n      caption: caption,\n      imageSrc: imageSrc,\n      onPress: onPress,\n      activeOpacity: activeOpacity,\n      containerStyle: containerStyle,\n      imageContainerStyle: imageContainerStyle,\n      overlayContainerStyle: overlayContainerStyle,\n      titleStyle: titleStyle,\n      captionStyle: captionStyle,\n      width: width,\n      height: height,\n      imageProps: imageProps,\n      ImageComponent: ImageComponent\n    };\n    return _react.default.createElement(_FeaturedTile.default, (0, _extends2.default)({}, featuredProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({}, attributes, {\n    onPress: onPress,\n    activeOpacity: activeOpacity,\n    style: _reactNative.StyleSheet.flatten([{\n      width: width,\n      height: height\n    }, containerStyle && containerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(ImageComponent, (0, _extends2.default)({\n    resizeMode: \"cover\",\n    source: imageSrc,\n    containerStyle: _reactNative.StyleSheet.flatten([styles.imageContainer, imageContainerStyle && imageContainerStyle]),\n    style: _objectSpread(_objectSpread({}, _reactNative.StyleSheet.absoluteFillObject), {}, {\n      alignItems: 'center',\n      justifyContent: 'center'\n    })\n  }, imageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: _reactNative.StyleSheet.flatten([styles.iconContainer, iconContainerStyle && iconContainerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, icon && _react.default.createElement(_Icon.default, (0, _extends2.default)({}, icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 20\n    }\n  })))), _react.default.createElement(_reactNative.View, {\n    style: _reactNative.StyleSheet.flatten([styles.contentContainer, contentContainerStyle && contentContainerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Text.default, {\n    testID: \"tileTitle\",\n    h4: !titleStyle || !titleStyle.fontSize,\n    style: _reactNative.StyleSheet.flatten([styles.text, titleStyle && titleStyle]),\n    numberOfLines: titleNumberOfLines,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, title), children));\n};\n\nexports.Tile = Tile;\nTile.propTypes = {\n  title: _propTypes.default.string,\n  icon: _propTypes.default.object,\n  caption: _propTypes.default.node,\n  imageSrc: _helpers.ImageSourceType,\n  onPress: _propTypes.default.func,\n  activeOpacity: _propTypes.default.number,\n  containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  imageContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  iconContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  overlayContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  titleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  captionStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  width: _propTypes.default.number,\n  height: _propTypes.default.number,\n  featured: _propTypes.default.bool,\n  children: _propTypes.default.node,\n  contentContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  titleNumberOfLines: _propTypes.default.number,\n  imageProps: _propTypes.default.object,\n  ImageComponent: _propTypes.default.elementType\n};\nTile.defaultProps = {\n  width: _reactNative.Dimensions.get('window').width,\n  ImageComponent: _Image.default,\n  imageProps: {}\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  imageContainer: {\n    flex: 2\n  },\n  text: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    marginBottom: 5\n  },\n  contentContainer: {\n    paddingTop: 15,\n    paddingBottom: 5,\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  iconContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center'\n  }\n});\n\nvar _default = (0, _config.withTheme)(Tile, 'Tile');\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Benny/Desktop/ReactNativeDrinkGame/node_modules/react-native-elements/src/tile/Tile.js"],"names":["Tile","props","featured","imageSrc","icon","title","children","caption","titleStyle","onPress","activeOpacity","overlayContainerStyle","captionStyle","iconContainerStyle","imageContainerStyle","containerStyle","contentContainerStyle","titleNumberOfLines","ImageComponent","imageProps","attributes","width","height","featuredProps","StyleSheet","flatten","styles","imageContainer","absoluteFillObject","alignItems","justifyContent","iconContainer","contentContainer","fontSize","text","propTypes","PropTypes","string","object","node","ImageSourceType","func","number","oneOfType","array","bool","elementType","defaultProps","Dimensions","get","Image","create","flex","backgroundColor","marginBottom","paddingTop","paddingBottom","paddingLeft","paddingRight","alignSelf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, StyleSheet, Dimensions, TouchableOpacity } from 'react-native';\n\nimport { withTheme } from '../config';\nimport { ImageSourceType } from '../helpers';\n\nimport Image from '../image/Image';\nimport Text from '../text/Text';\nimport Icon from '../icons/Icon';\nimport FeaturedTile from './FeaturedTile';\n\nconst Tile = (props) => {\n  const {\n    featured,\n    imageSrc,\n    icon,\n    title,\n    children,\n    caption,\n    titleStyle,\n    onPress,\n    activeOpacity,\n    overlayContainerStyle,\n    captionStyle,\n    iconContainerStyle,\n    imageContainerStyle,\n    containerStyle,\n    contentContainerStyle,\n    titleNumberOfLines,\n    ImageComponent,\n    imageProps,\n    ...attributes\n  } = props;\n\n  const { width, height = width * 0.8 } = props;\n\n  if (featured) {\n    const featuredProps = {\n      title,\n      icon,\n      caption,\n      imageSrc,\n      onPress,\n      activeOpacity,\n      containerStyle,\n      imageContainerStyle,\n      overlayContainerStyle,\n      titleStyle,\n      captionStyle,\n      width,\n      height,\n      imageProps,\n      ImageComponent,\n    };\n    return <FeaturedTile {...featuredProps} />;\n  }\n\n  return (\n    <TouchableOpacity\n      {...attributes}\n      onPress={onPress}\n      activeOpacity={activeOpacity}\n      style={StyleSheet.flatten([\n        {\n          width,\n          height,\n        },\n        containerStyle && containerStyle,\n      ])}\n    >\n      <ImageComponent\n        resizeMode=\"cover\"\n        source={imageSrc}\n        containerStyle={StyleSheet.flatten([\n          styles.imageContainer,\n          imageContainerStyle && imageContainerStyle,\n        ])}\n        style={{\n          ...StyleSheet.absoluteFillObject,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n        {...imageProps}\n      >\n        <View\n          style={StyleSheet.flatten([\n            styles.iconContainer,\n            iconContainerStyle && iconContainerStyle,\n          ])}\n        >\n          {icon && <Icon {...icon} />}\n        </View>\n      </ImageComponent>\n\n      <View\n        style={StyleSheet.flatten([\n          styles.contentContainer,\n          contentContainerStyle && contentContainerStyle,\n        ])}\n      >\n        <Text\n          testID=\"tileTitle\"\n          h4={!titleStyle || !titleStyle.fontSize}\n          style={StyleSheet.flatten([styles.text, titleStyle && titleStyle])}\n          numberOfLines={titleNumberOfLines}\n        >\n          {title}\n        </Text>\n        {children}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nTile.propTypes = {\n  title: PropTypes.string,\n  icon: PropTypes.object,\n  caption: PropTypes.node,\n  imageSrc: ImageSourceType,\n  onPress: PropTypes.func,\n  activeOpacity: PropTypes.number,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  imageContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  iconContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  overlayContainerStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  captionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  featured: PropTypes.bool,\n  children: PropTypes.node,\n  contentContainerStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  titleNumberOfLines: PropTypes.number,\n  imageProps: PropTypes.object,\n  ImageComponent: PropTypes.elementType,\n};\n\nTile.defaultProps = {\n  width: Dimensions.get('window').width,\n  ImageComponent: Image,\n  imageProps: {},\n};\n\nconst styles = StyleSheet.create({\n  imageContainer: {\n    flex: 2,\n  },\n  text: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    marginBottom: 5,\n  },\n  contentContainer: {\n    paddingTop: 15,\n    paddingBottom: 5,\n    paddingLeft: 15,\n    paddingRight: 15,\n  },\n  iconContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n  },\n});\n\nexport { Tile };\nexport default withTheme(Tile, 'Tile');\n"]},"metadata":{},"sourceType":"script"}