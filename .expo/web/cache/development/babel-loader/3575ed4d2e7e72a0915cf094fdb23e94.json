{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _data = require(\"../data\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Benny\\\\Desktop\\\\ReactNativeDrinkGame\\\\components\\\\Categories.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Categories = function Categories(props) {\n  var handleCategoryChanges = props.handleCategoryChanges;\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      categories = _useState2[0],\n      setCategories = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    setCategories(_data.CATEGORIES);\n  }, []);\n\n  var handleOnPress = function handleOnPress(category) {\n    var selectCategory = categories.map(function (cat) {\n      if (cat.id === category.id) {\n        return _objectSpread(_objectSpread({}, category), {}, {\n          selected: !cat.selected\n        });\n      }\n\n      return cat;\n    });\n    setCategories(selectCategory);\n  };\n\n  var saveCategories = function saveCategories() {\n    var selectedCategories = categories.filter(function (cat) {\n      return !!cat.selected;\n    });\n    handleCategoryChanges(selectedCategories);\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Kategorien\"), categories.map(function (category) {\n    return _react.default.createElement(_reactNativeElements.ListItem, {\n      containerStyle: [categoryStyle, category != null && category.selected ? selectedStyle : undefined],\n      key: category.id,\n      bottomDivider: true,\n      onPress: function onPress() {\n        return handleOnPress(category);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNativeElements.ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNativeElements.ListItem.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, category.title), _react.default.createElement(_reactNativeElements.ListItem.Subtitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, category.desc)));\n  }), _react.default.createElement(_reactNative.Button, {\n    title: \"Kategorien ausw\\xE4hlen\",\n    onPress: saveCategories,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar categoryStyle = {\n  width: 50\n};\nvar selectedStyle = {\n  backgroundColor: '#c0c0c0'\n};\nvar _default = Categories;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Benny/Desktop/ReactNativeDrinkGame/components/Categories.js"],"names":["Categories","props","handleCategoryChanges","categories","setCategories","CATEGORIES","handleOnPress","category","selectCategory","map","cat","id","selected","saveCategories","selectedCategories","filter","categoryStyle","selectedStyle","undefined","title","desc","width","backgroundColor"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA,MACpBC,qBADoB,GACMD,KADN,CACpBC,qBADoB;;AAAA,kBAEQ,qBAAS,EAAT,CAFR;AAAA;AAAA,MAErBC,UAFqB;AAAA,MAETC,aAFS;;AAI5B,wBAAU,YAAM;AACdA,IAAAA,aAAa,CAACC,gBAAD,CAAb;AACD,GAFD,EAEG,EAFH;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAc;AAClC,QAAMC,cAAc,GAAGL,UAAU,CAACM,GAAX,CAAe,UAACC,GAAD,EAAS;AAC7C,UAAIA,GAAG,CAACC,EAAJ,KAAWJ,QAAQ,CAACI,EAAxB,EAA4B;AAC1B,+CAAYJ,QAAZ;AAAsBK,UAAAA,QAAQ,EAAE,CAACF,GAAG,CAACE;AAArC;AACD;;AACD,aAAOF,GAAP;AACD,KALsB,CAAvB;AAMAN,IAAAA,aAAa,CAACI,cAAD,CAAb;AACD,GARD;;AAUA,MAAMK,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAMC,kBAAkB,GAAGX,UAAU,CAACY,MAAX,CAAkB,UAACL,GAAD;AAAA,aAAS,CAAC,CAACA,GAAG,CAACE,QAAf;AAAA,KAAlB,CAA3B;AACAV,IAAAA,qBAAqB,CAACY,kBAAD,CAArB;AACD,GAHD;;AAKA,SACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGX,UAAU,CAACM,GAAX,CAAe,UAACF,QAAD;AAAA,WACd,6BAAC,6BAAD;AACE,MAAA,cAAc,EAAE,CACdS,aADc,EAEdT,QAAQ,QAAR,IAAAA,QAAQ,CAAEK,QAAV,GAAqBK,aAArB,GAAqCC,SAFvB,CADlB;AAKE,MAAA,GAAG,EAAEX,QAAQ,CAACI,EALhB;AAME,MAAA,aAAa,MANf;AAOE,MAAA,OAAO,EAAE;AAAA,eAAML,aAAa,CAACC,QAAD,CAAnB;AAAA,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,6BAAC,6BAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,6BAAD,CAAU,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBA,QAAQ,CAACY,KAA1B,CADF,EAEE,6BAAC,6BAAD,CAAU,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBZ,QAAQ,CAACa,IAA7B,CAFF,CATF,CADc;AAAA,GAAf,CAFH,EAkBE,6BAAC,mBAAD;AAAQ,IAAA,KAAK,EAAC,yBAAd;AAAqC,IAAA,OAAO,EAAEP,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAsBD,CA7CD;;AA+CA,IAAMG,aAAa,GAAG;AACpBK,EAAAA,KAAK,EAAE;AADa,CAAtB;AAIA,IAAMJ,aAAa,GAAG;AACpBK,EAAAA,eAAe,EAAE;AADG,CAAtB;eAIetB,U","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Button } from 'react-native';\r\nimport { ListItem } from 'react-native-elements';\r\nimport { CATEGORIES } from '../data';\r\n\r\nconst Categories = (props) => {\r\n  const { handleCategoryChanges } = props;\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setCategories(CATEGORIES);\r\n  }, []);\r\n\r\n  const handleOnPress = (category) => {\r\n    const selectCategory = categories.map((cat) => {\r\n      if (cat.id === category.id) {\r\n        return { ...category, selected: !cat.selected };\r\n      }\r\n      return cat;\r\n    });\r\n    setCategories(selectCategory);\r\n  };\r\n\r\n  const saveCategories = () => {\r\n    const selectedCategories = categories.filter((cat) => !!cat.selected);\r\n    handleCategoryChanges(selectedCategories);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text>Kategorien</Text>\r\n      {categories.map((category) => (\r\n        <ListItem\r\n          containerStyle={[\r\n            categoryStyle,\r\n            category?.selected ? selectedStyle : undefined,\r\n          ]}\r\n          key={category.id}\r\n          bottomDivider\r\n          onPress={() => handleOnPress(category)}\r\n        >\r\n          <ListItem.Content>\r\n            <ListItem.Title>{category.title}</ListItem.Title>\r\n            <ListItem.Subtitle>{category.desc}</ListItem.Subtitle>\r\n          </ListItem.Content>\r\n        </ListItem>\r\n      ))}\r\n      <Button title=\"Kategorien auswÃ¤hlen\" onPress={saveCategories} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst categoryStyle = {\r\n  width: 50,\r\n};\r\n\r\nconst selectedStyle = {\r\n  backgroundColor: '#c0c0c0',\r\n};\r\n\r\nexport default Categories;\r\n"]},"metadata":{},"sourceType":"script"}