{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ButtonGroup = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _config = require(\"../config\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _Text = _interopRequireDefault(require(\"../text/Text\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Benny\\\\Desktop\\\\ReactNativeDrinkGame\\\\node_modules\\\\react-native-elements\\\\src\\\\buttons\\\\ButtonGroup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar ButtonGroup = function ButtonGroup(props) {\n  var theme = props.theme,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"theme\"]);\n  var Component = rest.Component,\n      buttons = rest.buttons,\n      _onPress = rest.onPress,\n      selectedIndex = rest.selectedIndex,\n      selectedIndexes = rest.selectedIndexes,\n      selectMultiple = rest.selectMultiple,\n      containerStyle = rest.containerStyle,\n      innerBorderStyle = rest.innerBorderStyle,\n      buttonStyle = rest.buttonStyle,\n      buttonContainerStyle = rest.buttonContainerStyle,\n      textStyle = rest.textStyle,\n      selectedTextStyle = rest.selectedTextStyle,\n      selectedButtonStyle = rest.selectedButtonStyle,\n      _rest$underlayColor = rest.underlayColor,\n      underlayColor = _rest$underlayColor === void 0 ? theme.colors.primary : _rest$underlayColor,\n      activeOpacity = rest.activeOpacity,\n      onHideUnderlay = rest.onHideUnderlay,\n      onShowUnderlay = rest.onShowUnderlay,\n      setOpacityTo = rest.setOpacityTo,\n      disabled = rest.disabled,\n      disabledStyle = rest.disabledStyle,\n      disabledTextStyle = rest.disabledTextStyle,\n      disabledSelectedStyle = rest.disabledSelectedStyle,\n      disabledSelectedTextStyle = rest.disabledSelectedTextStyle,\n      vertical = rest.vertical,\n      attributes = (0, _objectWithoutProperties2.default)(rest, [\"Component\", \"buttons\", \"onPress\", \"selectedIndex\", \"selectedIndexes\", \"selectMultiple\", \"containerStyle\", \"innerBorderStyle\", \"buttonStyle\", \"buttonContainerStyle\", \"textStyle\", \"selectedTextStyle\", \"selectedButtonStyle\", \"underlayColor\", \"activeOpacity\", \"onHideUnderlay\", \"onShowUnderlay\", \"setOpacityTo\", \"disabled\", \"disabledStyle\", \"disabledTextStyle\", \"disabledSelectedStyle\", \"disabledSelectedTextStyle\", \"vertical\"]);\n  var innerBorderWidth = 1;\n\n  if (innerBorderStyle && Object.prototype.hasOwnProperty.call(innerBorderStyle, 'width')) {\n    innerBorderWidth = innerBorderStyle.width;\n  }\n\n  return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, attributes, {\n    style: _reactNative.StyleSheet.flatten([styles.container, vertical && styles.verticalContainer, containerStyle && containerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), buttons.map(function (button, i) {\n    var isSelected = selectedIndex === i || selectedIndexes.includes(i);\n    var isDisabled = disabled === true || Array.isArray(disabled) && disabled.includes(i);\n    return _react.default.createElement(_reactNative.View, {\n      key: i,\n      style: _reactNative.StyleSheet.flatten([styles.button, vertical && styles.verticalComponent, i !== buttons.length - 1 && (vertical ? {\n        borderBottomWidth: innerBorderWidth,\n        borderBottomColor: innerBorderStyle && innerBorderStyle.color || theme.colors.grey4\n      } : {\n        borderRightWidth: innerBorderWidth,\n        borderRightColor: innerBorderStyle && innerBorderStyle.color || theme.colors.grey4\n      }), buttonContainerStyle]),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(Component, {\n      testID: \"buttonGroupItem\",\n      activeOpacity: activeOpacity,\n      setOpacityTo: setOpacityTo,\n      onHideUnderlay: onHideUnderlay,\n      onShowUnderlay: onShowUnderlay,\n      underlayColor: underlayColor,\n      disabled: isDisabled,\n      onPress: function onPress() {\n        if (selectMultiple) {\n          if (selectedIndexes.includes(i)) {\n            _onPress(selectedIndexes.filter(function (index) {\n              return index !== i;\n            }));\n          } else {\n            _onPress([].concat((0, _toConsumableArray2.default)(selectedIndexes), [i]));\n          }\n        } else {\n          _onPress(i);\n        }\n      },\n      style: styles.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: _reactNative.StyleSheet.flatten([styles.textContainer, buttonStyle && buttonStyle, isSelected && {\n        backgroundColor: theme.colors.primary\n      }, isSelected && selectedButtonStyle && selectedButtonStyle, isDisabled && styles.disabled, isDisabled && disabledStyle, isDisabled && isSelected && styles.disabledSelected(theme), isDisabled && isSelected && disabledSelectedStyle]),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, button.element ? _react.default.createElement(button.element, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }) : _react.default.createElement(_Text.default, {\n      testID: \"buttonGroupItemText\",\n      style: _reactNative.StyleSheet.flatten([styles.buttonText(theme), textStyle && textStyle, isSelected && {\n        color: '#fff'\n      }, isSelected && selectedTextStyle, isDisabled && styles.disabledText(theme), isDisabled && disabledTextStyle, isDisabled && isSelected && disabledSelectedTextStyle]),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, button))));\n  }));\n};\n\nexports.ButtonGroup = ButtonGroup;\nvar styles = {\n  button: {\n    flex: 1\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 5,\n    borderColor: '#e3e3e3',\n    borderWidth: 1,\n    flexDirection: 'row',\n    borderRadius: 3,\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n    height: 40\n  },\n  verticalContainer: {\n    flexDirection: 'column',\n    height: null\n  },\n  verticalComponent: {\n    height: 40\n  },\n  buttonText: function buttonText(theme) {\n    return _objectSpread({\n      fontSize: (0, _helpers.normalizeText)(13),\n      color: theme.colors.grey2\n    }, _reactNative.Platform.select({\n      android: {},\n      default: {\n        fontWeight: '500'\n      }\n    }));\n  },\n  disabled: {\n    backgroundColor: 'transparent'\n  },\n  disabledText: function disabledText(theme) {\n    return {\n      color: (0, _helpers.color)(theme.colors.disabled).darken(0.3).toString()\n    };\n  },\n  disabledSelected: function disabledSelected(theme) {\n    return {\n      backgroundColor: theme.colors.disabled\n    };\n  }\n};\nButtonGroup.propTypes = {\n  button: _propTypes.default.object,\n  Component: _propTypes.default.elementType,\n  onPress: _propTypes.default.func,\n  buttons: _propTypes.default.array,\n  containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  textStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  selectedTextStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  selectedButtonStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  underlayColor: _propTypes.default.string,\n  selectedIndex: _propTypes.default.number,\n  selectedIndexes: _propTypes.default.arrayOf(_propTypes.default.number),\n  activeOpacity: _propTypes.default.number,\n  onHideUnderlay: _propTypes.default.func,\n  onShowUnderlay: _propTypes.default.func,\n  setOpacityTo: _propTypes.default.func,\n  innerBorderStyle: _propTypes.default.shape({\n    color: _propTypes.default.string,\n    width: _propTypes.default.number\n  }),\n  buttonStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  buttonContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  selectMultiple: _propTypes.default.bool,\n  theme: _propTypes.default.object,\n  disabled: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.arrayOf(_propTypes.default.number)]),\n  disabledStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  disabledTextStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  disabledSelectedStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  disabledSelectedTextStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  vertical: _propTypes.default.bool\n};\nButtonGroup.defaultProps = {\n  selectedIndex: null,\n  selectedIndexes: [],\n  selectMultiple: false,\n  disabled: false,\n  Component: _reactNative.Platform.select({\n    android: _reactNative.TouchableNativeFeedback,\n    default: _reactNative.TouchableOpacity\n  }),\n  onPress: function onPress() {\n    return null;\n  },\n  vertical: false\n};\n\nvar _default = (0, _config.withTheme)(ButtonGroup, 'ButtonGroup');\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Benny/Desktop/ReactNativeDrinkGame/node_modules/react-native-elements/src/buttons/ButtonGroup.js"],"names":["ButtonGroup","props","theme","rest","Component","buttons","onPress","selectedIndex","selectedIndexes","selectMultiple","containerStyle","innerBorderStyle","buttonStyle","buttonContainerStyle","textStyle","selectedTextStyle","selectedButtonStyle","underlayColor","colors","primary","activeOpacity","onHideUnderlay","onShowUnderlay","setOpacityTo","disabled","disabledStyle","disabledTextStyle","disabledSelectedStyle","disabledSelectedTextStyle","vertical","attributes","innerBorderWidth","Object","prototype","hasOwnProperty","call","width","StyleSheet","flatten","styles","container","verticalContainer","map","button","i","isSelected","includes","isDisabled","Array","isArray","verticalComponent","length","borderBottomWidth","borderBottomColor","color","grey4","borderRightWidth","borderRightColor","filter","index","textContainer","backgroundColor","disabledSelected","element","buttonText","disabledText","flex","justifyContent","alignItems","marginHorizontal","marginVertical","borderColor","borderWidth","flexDirection","borderRadius","overflow","height","fontSize","grey2","Platform","select","android","default","fontWeight","darken","toString","propTypes","PropTypes","object","elementType","func","array","oneOfType","string","number","arrayOf","shape","bool","defaultProps","TouchableNativeFeedback","TouchableOpacity"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  Platform,\n  StyleSheet,\n} from 'react-native';\n\nimport { withTheme } from '../config';\nimport { normalizeText, color } from '../helpers';\n\nimport Text from '../text/Text';\n\nconst ButtonGroup = (props) => {\n  const { theme, ...rest } = props;\n\n  const {\n    Component,\n    buttons,\n    onPress,\n    selectedIndex,\n    selectedIndexes,\n    selectMultiple,\n    containerStyle,\n    innerBorderStyle,\n    buttonStyle,\n    buttonContainerStyle,\n    textStyle,\n    selectedTextStyle,\n    selectedButtonStyle,\n    underlayColor = theme.colors.primary,\n    activeOpacity,\n    onHideUnderlay,\n    onShowUnderlay,\n    setOpacityTo,\n    disabled,\n    disabledStyle,\n    disabledTextStyle,\n    disabledSelectedStyle,\n    disabledSelectedTextStyle,\n    vertical,\n    ...attributes\n  } = rest;\n\n  let innerBorderWidth = 1;\n\n  if (\n    innerBorderStyle &&\n    Object.prototype.hasOwnProperty.call(innerBorderStyle, 'width')\n  ) {\n    innerBorderWidth = innerBorderStyle.width;\n  }\n\n  return (\n    <View\n      {...attributes}\n      style={StyleSheet.flatten([\n        styles.container,\n        vertical && styles.verticalContainer,\n        containerStyle && containerStyle,\n      ])}\n    >\n      {buttons.map((button, i) => {\n        const isSelected = selectedIndex === i || selectedIndexes.includes(i);\n        const isDisabled =\n          disabled === true ||\n          (Array.isArray(disabled) && disabled.includes(i));\n\n        return (\n          <View\n            key={i}\n            style={StyleSheet.flatten([\n              styles.button,\n              vertical && styles.verticalComponent,\n              i !== buttons.length - 1 &&\n                (vertical\n                  ? {\n                      borderBottomWidth: innerBorderWidth,\n                      borderBottomColor:\n                        (innerBorderStyle && innerBorderStyle.color) ||\n                        theme.colors.grey4,\n                    }\n                  : {\n                      borderRightWidth: innerBorderWidth,\n                      borderRightColor:\n                        (innerBorderStyle && innerBorderStyle.color) ||\n                        theme.colors.grey4,\n                    }),\n              buttonContainerStyle,\n            ])}\n          >\n            <Component\n              testID=\"buttonGroupItem\"\n              activeOpacity={activeOpacity}\n              setOpacityTo={setOpacityTo}\n              onHideUnderlay={onHideUnderlay}\n              onShowUnderlay={onShowUnderlay}\n              underlayColor={underlayColor}\n              disabled={isDisabled}\n              onPress={() => {\n                if (selectMultiple) {\n                  if (selectedIndexes.includes(i)) {\n                    onPress(selectedIndexes.filter((index) => index !== i));\n                  } else {\n                    onPress([...selectedIndexes, i]);\n                  }\n                } else {\n                  onPress(i);\n                }\n              }}\n              style={styles.button}\n            >\n              <View\n                style={StyleSheet.flatten([\n                  styles.textContainer,\n                  buttonStyle && buttonStyle,\n                  isSelected && {\n                    backgroundColor: theme.colors.primary,\n                  },\n                  isSelected && selectedButtonStyle && selectedButtonStyle,\n                  isDisabled && styles.disabled,\n                  isDisabled && disabledStyle,\n                  isDisabled && isSelected && styles.disabledSelected(theme),\n                  isDisabled && isSelected && disabledSelectedStyle,\n                ])}\n              >\n                {button.element ? (\n                  <button.element />\n                ) : (\n                  <Text\n                    testID=\"buttonGroupItemText\"\n                    style={StyleSheet.flatten([\n                      styles.buttonText(theme),\n                      textStyle && textStyle,\n                      isSelected && { color: '#fff' },\n                      isSelected && selectedTextStyle,\n                      isDisabled && styles.disabledText(theme),\n                      isDisabled && disabledTextStyle,\n                      isDisabled && isSelected && disabledSelectedTextStyle,\n                    ])}\n                  >\n                    {button}\n                  </Text>\n                )}\n              </View>\n            </Component>\n          </View>\n        );\n      })}\n    </View>\n  );\n};\n\nconst styles = {\n  button: {\n    flex: 1,\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 5,\n    borderColor: '#e3e3e3',\n    borderWidth: 1,\n    flexDirection: 'row',\n    borderRadius: 3,\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n    height: 40,\n  },\n  verticalContainer: {\n    flexDirection: 'column',\n    height: null,\n  },\n  verticalComponent: {\n    height: 40,\n  },\n  buttonText: (theme) => ({\n    fontSize: normalizeText(13),\n    color: theme.colors.grey2,\n    ...Platform.select({\n      android: {},\n      default: {\n        fontWeight: '500',\n      },\n    }),\n  }),\n  disabled: {\n    backgroundColor: 'transparent',\n  },\n  disabledText: (theme) => ({\n    color: color(theme.colors.disabled).darken(0.3).toString(),\n  }),\n  disabledSelected: (theme) => ({\n    backgroundColor: theme.colors.disabled,\n  }),\n};\n\nButtonGroup.propTypes = {\n  button: PropTypes.object,\n  Component: PropTypes.elementType,\n  onPress: PropTypes.func,\n  buttons: PropTypes.array,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectedTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectedButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  underlayColor: PropTypes.string,\n  selectedIndex: PropTypes.number,\n  selectedIndexes: PropTypes.arrayOf(PropTypes.number),\n  activeOpacity: PropTypes.number,\n  onHideUnderlay: PropTypes.func,\n  onShowUnderlay: PropTypes.func,\n  setOpacityTo: PropTypes.func,\n  innerBorderStyle: PropTypes.shape({\n    color: PropTypes.string,\n    width: PropTypes.number,\n  }),\n  buttonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  buttonContainerStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  selectMultiple: PropTypes.bool,\n  theme: PropTypes.object,\n  disabled: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.arrayOf(PropTypes.number),\n  ]),\n  disabledStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  disabledTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  disabledSelectedStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  disabledSelectedTextStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  vertical: PropTypes.bool,\n};\n\nButtonGroup.defaultProps = {\n  selectedIndex: null,\n  selectedIndexes: [],\n  selectMultiple: false,\n  disabled: false,\n  Component: Platform.select({\n    android: TouchableNativeFeedback,\n    default: TouchableOpacity,\n  }),\n  onPress: () => null,\n  vertical: false,\n};\n\nexport { ButtonGroup };\nexport default withTheme(ButtonGroup, 'ButtonGroup');\n"]},"metadata":{},"sourceType":"script"}