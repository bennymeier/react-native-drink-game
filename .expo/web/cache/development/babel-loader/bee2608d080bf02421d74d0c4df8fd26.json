{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFA5iconSet = createFA5iconSet;\nexports.FA5Style = void 0;\n\nvar _reactNative = require(\"./react-native\");\n\nvar _createMultiStyleIconSet = _interopRequireDefault(require(\"./create-multi-style-icon-set\"));\n\nvar FA5Style = {\n  regular: 'regular',\n  light: 'light',\n  solid: 'solid',\n  brand: 'brand'\n};\nexports.FA5Style = FA5Style;\n\nfunction createFA5iconSet(glyphMap) {\n  var metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var pro = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var metadataKeys = Object.keys(metadata);\n  var fontFamily = \"FontAwesome5\" + (pro ? 'Pro' : 'Free');\n\n  function fallbackFamily(glyph) {\n    for (var i = 0; i < metadataKeys.length; i += 1) {\n      var family = metadataKeys[i];\n\n      if (metadata[family].indexOf(glyph) !== -1) {\n        return family === 'brands' ? 'brand' : family;\n      }\n    }\n\n    return 'regular';\n  }\n\n  function glyphValidator(glyph, style) {\n    var family = style === 'brand' ? 'brands' : style;\n    if (metadataKeys.indexOf(family) === -1) return false;\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n\n  function createFontAwesomeStyle(style, fontWeight) {\n    var family = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : fontFamily;\n    var styleName = style;\n    var fontFile = \"FontAwesome5_\" + (pro ? \"Pro_\" + styleName : styleName) + \".ttf\";\n\n    if (styleName === 'Brands') {\n      styleName = 'Regular';\n      fontFile = 'FontAwesome5_Brands.ttf';\n    }\n\n    return {\n      fontFamily: family + \"-\" + styleName,\n      fontFile: fontFile,\n      fontStyle: _reactNative.Platform.select({\n        ios: {\n          fontWeight: fontWeight\n        },\n        default: {}\n      }),\n      glyphMap: glyphMap\n    };\n  }\n\n  var brandIcons = createFontAwesomeStyle('Brands', '400', 'FontAwesome5Brands');\n  var lightIcons = createFontAwesomeStyle('Light', '300');\n  var regularIcons = createFontAwesomeStyle('Regular', '400');\n  var solidIcons = createFontAwesomeStyle('Solid', '900');\n  var Icon = (0, _createMultiStyleIconSet.default)({\n    brand: brandIcons,\n    light: lightIcons,\n    regular: regularIcons,\n    solid: solidIcons\n  }, {\n    defaultStyle: 'regular',\n    fallbackFamily: fallbackFamily,\n    glyphValidator: glyphValidator\n  });\n  return Icon;\n}","map":{"version":3,"sources":["C:/Users/Benny/Desktop/ReactNativeDrinkGame/node_modules/react-native-vector-icons/lib/create-icon-set-from-fontawesome5.js"],"names":["FA5Style","regular","light","solid","brand","createFA5iconSet","glyphMap","metadata","pro","metadataKeys","Object","keys","fontFamily","fallbackFamily","glyph","i","length","family","indexOf","glyphValidator","style","createFontAwesomeStyle","fontWeight","styleName","fontFile","fontStyle","Platform","select","ios","default","brandIcons","lightIcons","regularIcons","solidIcons","Icon","defaultStyle"],"mappings":";;;;;;;;AAAA;;AACA;;AAEA,IAAMA,QAAQ,GAAG;AACfC,EAAAA,OAAO,EAAE,SADM;AAEfC,EAAAA,KAAK,EAAE,OAFQ;AAGfC,EAAAA,KAAK,EAAE,OAHQ;AAIfC,EAAAA,KAAK,EAAE;AAJQ,CAAjB;;;AAOA,SAASC,gBAAT,CAA0BC,QAA1B,EAAgE;AAAA,MAA5BC,QAA4B,uEAAjB,EAAiB;AAAA,MAAbC,GAAa,uEAAP,KAAO;AAC9D,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,CAArB;AACA,MAAMK,UAAU,qBAAkBJ,GAAG,GAAG,KAAH,GAAW,MAAhC,CAAhB;;AAEA,WAASK,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,YAAY,CAACO,MAAjC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD;AAC/C,UAAME,MAAM,GAAGR,YAAY,CAACM,CAAD,CAA3B;;AACA,UAAIR,QAAQ,CAACU,MAAD,CAAR,CAAiBC,OAAjB,CAAyBJ,KAAzB,MAAoC,CAAC,CAAzC,EAA4C;AAC1C,eAAOG,MAAM,KAAK,QAAX,GAAsB,OAAtB,GAAgCA,MAAvC;AACD;AACF;;AAED,WAAO,SAAP;AACD;;AAED,WAASE,cAAT,CAAwBL,KAAxB,EAA+BM,KAA/B,EAAsC;AACpC,QAAMH,MAAM,GAAGG,KAAK,KAAK,OAAV,GAAoB,QAApB,GAA+BA,KAA9C;AACA,QAAIX,YAAY,CAACS,OAAb,CAAqBD,MAArB,MAAiC,CAAC,CAAtC,EAAyC,OAAO,KAAP;AACzC,WAAOV,QAAQ,CAACU,MAAD,CAAR,CAAiBC,OAAjB,CAAyBJ,KAAzB,MAAoC,CAAC,CAA5C;AACD;;AAED,WAASO,sBAAT,CAAgCD,KAAhC,EAAuCE,UAAvC,EAAwE;AAAA,QAArBL,MAAqB,uEAAZL,UAAY;AACtE,QAAIW,SAAS,GAAGH,KAAhB;AACA,QAAII,QAAQ,sBAAmBhB,GAAG,YAAUe,SAAV,GAAwBA,SAA9C,UAAZ;;AAEA,QAAIA,SAAS,KAAK,QAAlB,EAA4B;AAC1BA,MAAAA,SAAS,GAAG,SAAZ;AACAC,MAAAA,QAAQ,GAAG,yBAAX;AACD;;AAED,WAAO;AACLZ,MAAAA,UAAU,EAAKK,MAAL,SAAeM,SADpB;AAELC,MAAAA,QAAQ,EAARA,QAFK;AAGLC,MAAAA,SAAS,EAAEC,sBAASC,MAAT,CAAgB;AACzBC,QAAAA,GAAG,EAAE;AACHN,UAAAA,UAAU,EAAVA;AADG,SADoB;AAIzBO,QAAAA,OAAO,EAAE;AAJgB,OAAhB,CAHN;AASLvB,MAAAA,QAAQ,EAARA;AATK,KAAP;AAWD;;AAED,MAAMwB,UAAU,GAAGT,sBAAsB,CACvC,QADuC,EAEvC,KAFuC,EAGvC,oBAHuC,CAAzC;AAKA,MAAMU,UAAU,GAAGV,sBAAsB,CAAC,OAAD,EAAU,KAAV,CAAzC;AACA,MAAMW,YAAY,GAAGX,sBAAsB,CAAC,SAAD,EAAY,KAAZ,CAA3C;AACA,MAAMY,UAAU,GAAGZ,sBAAsB,CAAC,OAAD,EAAU,KAAV,CAAzC;AACA,MAAMa,IAAI,GAAG,sCACX;AACE9B,IAAAA,KAAK,EAAE0B,UADT;AAEE5B,IAAAA,KAAK,EAAE6B,UAFT;AAGE9B,IAAAA,OAAO,EAAE+B,YAHX;AAIE7B,IAAAA,KAAK,EAAE8B;AAJT,GADW,EAOX;AACEE,IAAAA,YAAY,EAAE,SADhB;AAEEtB,IAAAA,cAAc,EAAdA,cAFF;AAGEM,IAAAA,cAAc,EAAdA;AAHF,GAPW,CAAb;AAcA,SAAOe,IAAP;AACD","sourcesContent":["import { Platform } from './react-native';\nimport createMultiStyleIconSet from './create-multi-style-icon-set';\n\nconst FA5Style = {\n  regular: 'regular',\n  light: 'light',\n  solid: 'solid',\n  brand: 'brand',\n};\n\nfunction createFA5iconSet(glyphMap, metadata = {}, pro = false) {\n  const metadataKeys = Object.keys(metadata);\n  const fontFamily = `FontAwesome5${pro ? 'Pro' : 'Free'}`;\n\n  function fallbackFamily(glyph) {\n    for (let i = 0; i < metadataKeys.length; i += 1) {\n      const family = metadataKeys[i];\n      if (metadata[family].indexOf(glyph) !== -1) {\n        return family === 'brands' ? 'brand' : family;\n      }\n    }\n\n    return 'regular';\n  }\n\n  function glyphValidator(glyph, style) {\n    const family = style === 'brand' ? 'brands' : style;\n    if (metadataKeys.indexOf(family) === -1) return false;\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n\n  function createFontAwesomeStyle(style, fontWeight, family = fontFamily) {\n    let styleName = style;\n    let fontFile = `FontAwesome5_${pro ? `Pro_${styleName}` : styleName}.ttf`;\n\n    if (styleName === 'Brands') {\n      styleName = 'Regular';\n      fontFile = 'FontAwesome5_Brands.ttf';\n    }\n\n    return {\n      fontFamily: `${family}-${styleName}`,\n      fontFile,\n      fontStyle: Platform.select({\n        ios: {\n          fontWeight,\n        },\n        default: {},\n      }),\n      glyphMap,\n    };\n  }\n\n  const brandIcons = createFontAwesomeStyle(\n    'Brands',\n    '400',\n    'FontAwesome5Brands'\n  );\n  const lightIcons = createFontAwesomeStyle('Light', '300');\n  const regularIcons = createFontAwesomeStyle('Regular', '400');\n  const solidIcons = createFontAwesomeStyle('Solid', '900');\n  const Icon = createMultiStyleIconSet(\n    {\n      brand: brandIcons,\n      light: lightIcons,\n      regular: regularIcons,\n      solid: solidIcons,\n    },\n    {\n      defaultStyle: 'regular',\n      fallbackFamily,\n      glyphValidator,\n    }\n  );\n\n  return Icon;\n}\n\nexport { createFA5iconSet, FA5Style };\n"]},"metadata":{},"sourceType":"script"}