{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _data = require(\"../data\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Benny\\\\Desktop\\\\ReactNativeDrinkGame\\\\components\\\\Categories.js\";\n\nvar Categories = function Categories(props) {\n  var handleCategoryChanges = props.handleCategoryChanges;\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      categories = _useState2[0],\n      setCategories = _useState2[1];\n\n  var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      chosenCategories = _useState4[0],\n      setChosenCategories = _useState4[1];\n\n  (0, _react.useEffect)(function () {\n    setCategories(_data.CATEGORIES);\n  }, []);\n\n  var handleOnPress = function handleOnPress(category) {};\n\n  return _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Kategorien\"), categories.map(function (category) {\n    return _react.default.createElement(_reactNativeElements.ListItem, {\n      containerStyle: category != null && category.selected ? selectedStyle : undefined,\n      key: category.id,\n      bottomDivider: true,\n      onPress: function onPress() {\n        return handl;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNativeElements.ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNativeElements.ListItem.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, category.title), _react.default.createElement(_reactNativeElements.ListItem.Subtitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, category.desc)));\n  }), _react.default.createElement(_reactNative.Button, {\n    title: \"Kategorien ausw\\xE4hlen\",\n    onPress: function onPress() {\n      return handleCategoryChanges(chosenCategories);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar selectedStyle = {\n  backgroundColor: 'gray'\n};\nvar _default = Categories;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Benny/Desktop/ReactNativeDrinkGame/components/Categories.js"],"names":["Categories","props","handleCategoryChanges","categories","setCategories","chosenCategories","setChosenCategories","CATEGORIES","handleOnPress","category","map","selected","selectedStyle","undefined","id","handl","title","desc","backgroundColor"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA,MACpBC,qBADoB,GACMD,KADN,CACpBC,qBADoB;;AAAA,kBAEQ,qBAAS,EAAT,CAFR;AAAA;AAAA,MAErBC,UAFqB;AAAA,MAETC,aAFS;;AAAA,mBAGoB,qBAAS,EAAT,CAHpB;AAAA;AAAA,MAGrBC,gBAHqB;AAAA,MAGHC,mBAHG;;AAK5B,wBAAU,YAAM;AACdF,IAAAA,aAAa,CAACG,gBAAD,CAAb;AACD,GAFD,EAEG,EAFH;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAc,CAAE,CAAtC;;AAEA,SACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGN,UAAU,CAACO,GAAX,CAAe,UAACD,QAAD;AAAA,WACd,6BAAC,6BAAD;AACE,MAAA,cAAc,EAAEA,QAAQ,QAAR,IAAAA,QAAQ,CAAEE,QAAV,GAAqBC,aAArB,GAAqCC,SADvD;AAEE,MAAA,GAAG,EAAEJ,QAAQ,CAACK,EAFhB;AAGE,MAAA,aAAa,MAHf;AAIE,MAAA,OAAO,EAAE;AAAA,eAAMC,KAAN;AAAA,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,6BAAC,6BAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,6BAAD,CAAU,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBN,QAAQ,CAACO,KAA1B,CADF,EAEE,6BAAC,6BAAD,CAAU,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBP,QAAQ,CAACQ,IAA7B,CAFF,CANF,CADc;AAAA,GAAf,CAFH,EAeE,6BAAC,mBAAD;AACE,IAAA,KAAK,EAAC,yBADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMf,qBAAqB,CAACG,gBAAD,CAA3B;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAsBD,CAjCD;;AAmCA,IAAMO,aAAa,GAAG;AACpBM,EAAAA,eAAe,EAAE;AADG,CAAtB;eAIelB,U","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Button } from 'react-native';\r\nimport { ListItem } from 'react-native-elements';\r\nimport { CATEGORIES } from '../data';\r\n\r\nconst Categories = (props) => {\r\n  const { handleCategoryChanges } = props;\r\n  const [categories, setCategories] = useState([]);\r\n  const [chosenCategories, setChosenCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setCategories(CATEGORIES);\r\n  }, []);\r\n\r\n  const handleOnPress = (category) => {};\r\n\r\n  return (\r\n    <View>\r\n      <Text>Kategorien</Text>\r\n      {categories.map((category) => (\r\n        <ListItem\r\n          containerStyle={category?.selected ? selectedStyle : undefined}\r\n          key={category.id}\r\n          bottomDivider\r\n          onPress={() => handl}\r\n        >\r\n          <ListItem.Content>\r\n            <ListItem.Title>{category.title}</ListItem.Title>\r\n            <ListItem.Subtitle>{category.desc}</ListItem.Subtitle>\r\n          </ListItem.Content>\r\n        </ListItem>\r\n      ))}\r\n      <Button\r\n        title=\"Kategorien auswÃ¤hlen\"\r\n        onPress={() => handleCategoryChanges(chosenCategories)}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst selectedStyle = {\r\n  backgroundColor: 'gray',\r\n};\r\n\r\nexport default Categories;\r\n"]},"metadata":{},"sourceType":"script"}